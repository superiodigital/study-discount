<div class="row" style="margin-top: 10px;">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="header-title">Upload offer here</h4>
                <p class="sub-header">
                    Fill the fields with following the instructions
                </p>
                <form id="editor-form" enctype="multipart/form-data">

                    <div class="row mb-3">
                        <div class="">
                            <label for="message" class="form-label">Name</label>
                            <input type="text" required parsley-type="name" name="name" class="form-control"
                                placeholder="Name" value="{{offer.name}}" />
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="">
                            <label for="message" class="form-label">Enter a slug</label>
                            <input type="text" parsley-type="slug" name="slug" class="form-control" placeholder="Slug"
                                value="{{offer.slug}}" required />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="example-select" class="form-label">Select Category</label>
                        <select class="form-select" id="example-select" name="category">
                            <option value="">Continue with old category</option>
                            {{#each categories}}
                            <option value="{{_id}}">{{name}}</option>
                            {{else}}
                            <option>No Categories available.</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="example-select" class="form-label">Select type</label>
                        <select class="form-select" id="example-select" name="type">
                            <option value="normal">Normal</option>
                            <option value="featured">Featured</option>
                        </select>
                    </div>
                    <div class="col-12 mt-3" style="border: 2px dotted #ccc; padding: 15px;">
                        <label for="fileInput" class="btn btn-primary d-block mx-auto">
                            <i class="fa-solid fa-file-arrow-up"></i>
                            <span>Choose File</span>
                            <input type="file" id="fileInput" style="display:none;" name="file" accept="image/*"
                                onchange="displayImage()" />
                        </label>
                        <p class="text-muted text-center mt-2 mb-0">Max File size</p>
                        <h3 class="text-center">Drop files here or click to upload.</h3>
                        <span class="text-muted font-13">(width: 1920 px, height: 900 px)</span>
                    </div>

                    <div id="imagePreview" class="text-center mt-3">
                        <!-- The selected image will be displayed here -->
                        <img style="height: 300px; " src="/uploads/{{offer.offerImage}}" alt="offImg">
                    </div>

                    <div class="mb-3">
                        <label for="message" class="form-label">Short Description</label>
                        <textarea class="form-control" id="example-textarea" rows="3"
                            name="shortDescription">{{offer.shortDescription}}</textarea>
                    </div>

                    <div id="snow-editor" style="height: 300px;">

                    </div>

                    <div class="" style="display: flex; justify-content: space-between; width: 100%;">
                        <div class="mb-3" style=" width: 100%; margin-right: 1px;">
                            <label for="example-number" class="form-label">Actual Price</label>
                            <input class="form-control" id="example-number" type="number" name="realPrice"
                                placeholder="Ex-2000" value="{{offer.realPrice}}" required>
                        </div>
                        <div class="mb-3" style=" width: 100%; margin-left: 1px;">
                            <label for="example-number" class="form-label">Offer Price</label>
                            <input class="form-control" id="example-number" type="number" name="offerPrice"
                                placeholder="Ex-2000" value="{{offer.offerPrice}}" required>
                        </div>
                        <div class="mb-3" style=" width: 100%; margin-left: 1px;">
                            <label for="example-number" class="form-label">Percent</label>
                            <input class="form-control" id="example-number" type="number" name="offerPercent"
                                placeholder="ex-30" value="{{offer.offerPercent}}">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Current:-{{offer.expiresFrom}} to {{offer.expiresTo}}</label>
                        <input type="text" id="range-datepicker" class="form-control"
                            placeholder="Set empty for continue with old date" name="fromTo">
                    </div>
                    <button type="submit" class="btn btn--md btn-pink waves-effect waves-light"><span><i
                                class="fa-solid fa-floppy-disk"></i></span> Save</button>
                </form>
                <!-- Preview -->
            </div> <!-- end card-body-->
        </div> <!-- end card-->
    </div><!-- end col -->
</div>

<script>
    function displayImage() {
        const fileInput = document.getElementById('fileInput');
        const imagePreview = document.getElementById('imagePreview');
        const file = fileInput.files[0];

        if (file) {
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    const img = new Image();
                    img.src = e.target.result;
                    img.style.maxWidth = '100%';
                    img.style.maxHeight = '300px'; // Adjust the maximum height as needed
                    imagePreview.innerHTML = '';
                    imagePreview.appendChild(img);
                };

                reader.readAsDataURL(file);
            } else {
                alert('Please select an image file.');
                fileInput.value = ''; // Reset the file input
                imagePreview.innerHTML = ''; // Clear the image preview
            }
        }
    }
</script>

<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>


    document.getElementById('editor-form').addEventListener('submit', function (e) {
        e.preventDefault();

        // Get the HTML content from the Quill editor
        const content = document.querySelector('.ql-editor').innerHTML;

        // Create a FormData object to serialize the form data
        const formData = new FormData(this);

        // Append the content from Quill to the FormData
        formData.append('content', content);
        var id = '{{offer._id}}'
        console.log(id)
        // Send an HTTP POST request using AJAX (fetch)
        fetch('/admin/edit-offer/' + id, {
            method: 'POST',
            body: formData,
        })
            .then((response) => {
                console.log(response)
                if (response.ok) {
                    location.href = '/admin/offers'
                } else {
                    throw new Error('Failed to save text content');
                }
            })
            .then((data) => {
                console.log(data.message);
            })
            .catch((error) => {
                console.error(error);
            });
    });
</script>

<script>
    // Get the encoded HTML content from your offer object
    const encodedHTML = "{{offer.longDescription}}";

    // Create a temporary element
    const tempElement = document.createElement('div');

    // Set its innerHTML to the encoded HTML
    tempElement.innerHTML = encodedHTML;

    // Get the decoded text using innerText
    const decodedHTML = tempElement.innerText;

    // Get the target <div> where you want to display the decoded HTML
    const contentDiv = document.getElementById('snow-editor');

    // Set the decoded HTML as the innerHTML of the target <div>
    contentDiv.innerHTML = decodedHTML;
</script>